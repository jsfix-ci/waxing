stages:
  - test
  - deploy

image: node:14

before_script:
  - echo "//registry.npmjs.org/:_authToken=${NPM_REGISTRY_TOKEN}" > .npmrc
  - npm ci --cache .npm --prefer-offline

cache:
  key: "waxing" # universal cache
  paths:
    - .npm/

test:
  stage: test
  script:
    - npm run coverage
  artifacts:
    name: "waxing_coverage_${CI_BUILD_ID}_${CI_BUILD_REF}"
    when: always
    expire_in: 6 mos
    reports:
      junit: report.xml
    paths:
      - coverage/

deploy:
  stage: deploy
  script:
    - if (npx semver $CI_COMMIT_TAG --range '>0.0.0'); then NPM_TAG=latest; else NPM_TAG=beta; fi; # Using the fact that semver by default considers that pre-releases do not respect stable ranges
    - npm publish --tag=$NPM_TAG
  only:
    - tags
